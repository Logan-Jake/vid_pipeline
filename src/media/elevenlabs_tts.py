import requests
from pathlib import Path
from utils import config


def generate_voiceover(text: str,
                       filename: str = "voiceover.mp3",
                       voice_id: str = "YOUR_VOICE_ID",
                       api_key: str = "YOUR_API_KEY") -> str:

    # Import api key
    api_key = config.elevenlabs_key
    chunk_size = 1024
    voice_id = 'GsjQ0ydx7QzhDLqInGtT'  # Female 'UgBBYS2sOqTuMpoF3BR0' Male # Select the voice id to use
    voice_model = 'eleven_multilingual_v2'
    url = f"https://api.elevenlabs.io/v1/text-to-speech/{voice_id}"  # Construct the streaming endpoint URL for the given voice_id.

    # The API requires an API key header and JSON content.
    headers = {
        "Accept": "audio/mpeg",
        "Content-Type": "application/json",
        "xi-api-key": api_key
    }

    # Configure the payload. Adjust voice settings such as stability and similarity_boost
    # as required. These settings let you tweak the naturalness and consistency of the speech.
    payload = {
        "text": text,
        "model_id": voice_model,
        "voice_settings": {
            "stability": 0.5,  # Lower values may yield more natural-sounding speech.
            "similarity_boost": 0.75  # Adjust to balance between similarity and variety.
        }
    }

    # Make the POST request with stream enabled to handle the audio data as it comes.
    response = requests.post(url, headers=headers, json=payload)

    if response.status_code != 200:
        raise Exception(f"Text-to-speech request failed: {response.status_code} - {response.text}")

    # Ensure the output directory exists.
    output_path = Path("media/output") / filename
    output_path.parent.mkdir(parents=True, exist_ok=True)

    # Stream the content and write it to a file.
    with open(output_path, "wb") as f:
        for chunk in response.iter_content(chunk_size):
            if chunk:
                f.write(chunk)

    print("Saved to:", output_path.resolve())
    return str(output_path.resolve())


# Example usage:
#if __name__ == "__main__":
#    sample_text = "Hello, this is a sample voiceover generated by ElevenLabs."
#    generate_voiceover(sample_text)
